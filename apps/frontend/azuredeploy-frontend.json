{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "17102531740028217408"
    }
  },
  "parameters": {
    "webAppName": {
      "type": "string",
      "defaultValue": "[format('webApp-Frontend-{0}', uniqueString(resourceGroup().id))]",
      "minLength": 2,
      "maxLength": 60,
      "metadata": {
        "description": "Optional. Web app name must be between 2 and 60 characters."
      }
    },
    "appServicePlanSKU": {
      "type": "string",
      "defaultValue": "S3",
      "allowedValues": [
        "B3",
        "S3",
        "P2v3"
      ],
      "metadata": {
        "description": "Optional, defaults to S3. The SKU of App Service Plan. The allowed values are B3, S3 and P2v3."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[format('AppServicePlan-Frontend-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Optional. The name of the App Service Plan."
      }
    },
    "botServiceName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of your Bot Service."
      }
    },
    "botDirectLineChannelKey": {
      "type": "securestring",
      "metadata": {
        "description": "Required. The key to the direct line channel of your bot."
      }
    },
    "blobSASToken": {
      "type": "securestring",
      "metadata": {
        "description": "Required. The SAS token for the Azure Storage Account hosting your data"
      }
    },
    "resourceGroupSearch": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Optional. The name of the resource group where the resources (Azure Search etc.) where deployed previously. Defaults to current resource group."
      }
    },
    "azureSearchName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Azure Search service deployed previously."
      }
    },
    "azureSearchAPIVersion": {
      "type": "string",
      "defaultValue": "2024-11-01-preview",
      "metadata": {
        "description": "Optional. The API version of the Azure Search."
      }
    },
    "azureOpenAIName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Azure OpenAI resource deployed previously."
      }
    },
    "azureOpenAIAPIKey": {
      "type": "securestring",
      "metadata": {
        "description": "Required. The API key of the Azure OpenAI resource deployed previously."
      }
    },
    "gpt4oDeploymentName": {
      "type": "string",
      "defaultValue": "gpt-4o",
      "metadata": {
        "description": "Required. The deployment name of the Azure OpenAI GPT-4o model."
      }
    },
    "gpt4oMiniDeploymentName": {
      "type": "string",
      "defaultValue": "gpt-4o-mini",
      "metadata": {
        "description": "Required. The deployment name of the Azure OpenAI GPT-4o-mini model."
      }
    },
    "azureOpenAIAPIVersion": {
      "type": "string",
      "defaultValue": "2024-10-01-preview",
      "metadata": {
        "description": "Required. The API version of the Azure OpenAI."
      }
    },
    "speechEngine": {
      "type": "string",
      "defaultValue": "openai",
      "metadata": {
        "description": "Required. Select the Speech engine: openai or azure"
      }
    },
    "openAIWhisperModelName": {
      "type": "string",
      "defaultValue": "whisper",
      "metadata": {
        "description": "Required. Select deployment name for the AOAI whisper model"
      }
    },
    "openAITTSModelName": {
      "type": "string",
      "defaultValue": "tts",
      "metadata": {
        "description": "Required. Select deployment name for the AOAI TTS model"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional, defaults to resource group location. The location of the resources."
      }
    }
  },
  "variables": {
    "backendWebAppName": "[format('webApp-Backend-{0}', parameters('botServiceName'))]",
    "fastAPIsiteHost": "[format('https://{0}-staging.azurewebsites.net', variables('backendWebAppName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appServicePlanSKU')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[parameters('webAppName')]",
      "tags": {
        "azd-service-name": "frontend"
      },
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "BOT_SERVICE_NAME",
              "value": "[parameters('botServiceName')]"
            },
            {
              "name": "BOT_DIRECTLINE_SECRET_KEY",
              "value": "[parameters('botDirectLineChannelKey')]"
            },
            {
              "name": "BLOB_SAS_TOKEN",
              "value": "[parameters('blobSASToken')]"
            },
            {
              "name": "AZURE_SEARCH_ENDPOINT",
              "value": "[format('https://{0}.search.windows.net', parameters('azureSearchName'))]"
            },
            {
              "name": "AZURE_SEARCH_KEY",
              "value": "[listAdminKeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupSearch')), 'Microsoft.Search/searchServices', parameters('azureSearchName')), '2021-04-01-preview').primaryKey]"
            },
            {
              "name": "AZURE_SEARCH_API_VERSION",
              "value": "[parameters('azureSearchAPIVersion')]"
            },
            {
              "name": "AZURE_OPENAI_ENDPOINT",
              "value": "[format('https://{0}.openai.azure.com/', parameters('azureOpenAIName'))]"
            },
            {
              "name": "AZURE_OPENAI_API_KEY",
              "value": "[parameters('azureOpenAIAPIKey')]"
            },
            {
              "name": "GPT4o_DEPLOYMENT_NAME",
              "value": "[parameters('gpt4oDeploymentName')]"
            },
            {
              "name": "GPT4oMINI_DEPLOYMENT_NAME",
              "value": "[parameters('gpt4oMiniDeploymentName')]"
            },
            {
              "name": "AZURE_OPENAI_API_VERSION",
              "value": "[parameters('azureOpenAIAPIVersion')]"
            },
            {
              "name": "SPEECH_ENGINE",
              "value": "[parameters('speechEngine')]"
            },
            {
              "name": "AZURE_OPENAI_WHISPER_MODEL_NAME",
              "value": "[parameters('openAIWhisperModelName')]"
            },
            {
              "name": "AZURE_OPENAI_TTS_MODEL_NAME",
              "value": "[parameters('openAITTSModelName')]"
            },
            {
              "name": "FAST_API_SERVER",
              "value": "[variables('fastAPIsiteHost')]"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('webAppName'), 'web')]",
      "properties": {
        "linuxFxVersion": "PYTHON|3.12",
        "alwaysOn": true,
        "appCommandLine": "python -m streamlit run app/Home.py --server.port 8000 --server.address 0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
      ]
    }
  ],
  "outputs": {
    "webAppURL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2022-09-01').defaultHostName]"
    },
    "webAppName": {
      "type": "string",
      "value": "[parameters('webAppName')]"
    }
  }
}